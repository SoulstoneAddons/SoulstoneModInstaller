use serde::{Deserialize, Serialize};

pub type GithubRepositories = Vec<Repository>;

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Repository {
    pub id: i64,
    #[serde(rename = "node_id")]
    pub node_id: Option<String>,
    pub name: Option<String>,
    #[serde(rename = "full_name")]
    pub full_name: Option<String>,
    pub private: bool,
    pub owner: Owner,
    #[serde(rename = "html_url")]
    pub html_url: String,
    pub description: Option<String>,
    pub fork: bool,
    pub url: String,
    #[serde(rename = "forks_url")]
    pub forks_url: Option<String>,
    #[serde(rename = "keys_url")]
    pub keys_url: Option<String>,
    #[serde(rename = "collaborators_url")]
    pub collaborators_url: Option<String>,
    #[serde(rename = "teams_url")]
    pub teams_url: Option<String>,
    #[serde(rename = "hooks_url")]
    pub hooks_url: Option<String>,
    #[serde(rename = "issue_events_url")]
    pub issue_events_url: Option<String>,
    #[serde(rename = "events_url")]
    pub events_url: Option<String>,
    #[serde(rename = "assignees_url")]
    pub assignees_url: Option<String>,
    #[serde(rename = "branches_url")]
    pub branches_url: Option<String>,
    #[serde(rename = "tags_url")]
    pub tags_url: Option<String>,
    #[serde(rename = "blobs_url")]
    pub blobs_url: Option<String>,
    #[serde(rename = "git_tags_url")]
    pub git_tags_url: Option<String>,
    #[serde(rename = "git_refs_url")]
    pub git_refs_url: Option<String>,
    #[serde(rename = "trees_url")]
    pub trees_url: Option<String>,
    #[serde(rename = "statuses_url")]
    pub statuses_url: Option<String>,
    #[serde(rename = "languages_url")]
    pub languages_url: Option<String>,
    #[serde(rename = "stargazers_url")]
    pub stargazers_url: Option<String>,
    #[serde(rename = "contributors_url")]
    pub contributors_url: Option<String>,
    #[serde(rename = "subscribers_url")]
    pub subscribers_url: Option<String>,
    #[serde(rename = "subscription_url")]
    pub subscription_url: Option<String>,
    #[serde(rename = "commits_url")]
    pub commits_url: Option<String>,
    #[serde(rename = "git_commits_url")]
    pub git_commits_url: Option<String>,
    #[serde(rename = "comments_url")]
    pub comments_url: Option<String>,
    #[serde(rename = "issue_comment_url")]
    pub issue_comment_url: Option<String>,
    #[serde(rename = "contents_url")]
    pub contents_url: Option<String>,
    #[serde(rename = "compare_url")]
    pub compare_url: Option<String>,
    #[serde(rename = "merges_url")]
    pub merges_url: Option<String>,
    #[serde(rename = "archive_url")]
    pub archive_url: Option<String>,
    #[serde(rename = "downloads_url")]
    pub downloads_url: Option<String>,
    #[serde(rename = "issues_url")]
    pub issues_url: Option<String>,
    #[serde(rename = "pulls_url")]
    pub pulls_url: Option<String>,
    #[serde(rename = "milestones_url")]
    pub milestones_url: Option<String>,
    #[serde(rename = "notifications_url")]
    pub notifications_url: Option<String>,
    #[serde(rename = "labels_url")]
    pub labels_url: Option<String>,
    #[serde(rename = "releases_url")]
    pub releases_url: Option<String>,
    #[serde(rename = "deployments_url")]
    pub deployments_url: Option<String>,
    #[serde(rename = "created_at")]
    pub created_at: Option<String>,
    #[serde(rename = "updated_at")]
    pub updated_at: Option<String>,
    #[serde(rename = "pushed_at")]
    pub pushed_at: Option<String>,
    #[serde(rename = "git_url")]
    pub git_url: Option<String>,
    #[serde(rename = "ssh_url")]
    pub ssh_url: Option<String>,
    #[serde(rename = "clone_url")]
    pub clone_url: Option<String>,
    #[serde(rename = "svn_url")]
    pub svn_url: Option<String>,
    pub homepage: Option<String>,
    pub size: i64,
    #[serde(rename = "stargazers_count")]
    pub stargazers_count: i64,
    #[serde(rename = "watchers_count")]
    pub watchers_count: i64,
    pub language: Option<String>,
    #[serde(rename = "has_issues")]
    pub has_issues: bool,
    #[serde(rename = "has_projects")]
    pub has_projects: bool,
    #[serde(rename = "has_downloads")]
    pub has_downloads: bool,
    #[serde(rename = "has_wiki")]
    pub has_wiki: bool,
    #[serde(rename = "has_pages")]
    pub has_pages: bool,
    #[serde(rename = "has_discussions")]
    pub has_discussions: bool,
    #[serde(rename = "forks_count")]
    pub forks_count: i64,
    #[serde(rename = "mirror_url")]
    pub mirror_url: Option<String>,
    pub archived: bool,
    pub disabled: bool,
    #[serde(rename = "open_issues_count")]
    pub open_issues_count: i64,
    pub license: Option<License>,
    #[serde(rename = "allow_forking")]
    pub allow_forking: bool,
    #[serde(rename = "is_template")]
    pub is_template: bool,
    #[serde(rename = "web_commit_signoff_required")]
    pub web_commit_signoff_required: bool,
    pub topics: Vec<String>,
    pub visibility: Option<String>,
    pub forks: i64,
    #[serde(rename = "open_issues")]
    pub open_issues: i64,
    pub watchers: i64,
    #[serde(rename = "default_branch")]
    pub default_branch: Option<String>,
    pub permissions: Permissions,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Owner {
    pub login: Option<String>,
    pub id: i64,
    #[serde(rename = "node_id")]
    pub node_id: Option<String>,
    #[serde(rename = "avatar_url")]
    pub avatar_url: Option<String>,
    #[serde(rename = "gravatar_id")]
    pub gravatar_id: Option<String>,
    pub url: Option<String>,
    #[serde(rename = "html_url")]
    pub html_url: Option<String>,
    #[serde(rename = "followers_url")]
    pub followers_url: Option<String>,
    #[serde(rename = "following_url")]
    pub following_url: Option<String>,
    #[serde(rename = "gists_url")]
    pub gists_url: Option<String>,
    #[serde(rename = "starred_url")]
    pub starred_url: Option<String>,
    #[serde(rename = "subscriptions_url")]
    pub subscriptions_url: Option<String>,
    #[serde(rename = "organizations_url")]
    pub organizations_url: Option<String>,
    #[serde(rename = "repos_url")]
    pub repos_url: Option<String>,
    #[serde(rename = "events_url")]
    pub events_url: Option<String>,
    #[serde(rename = "received_events_url")]
    pub received_events_url: Option<String>,
    #[serde(rename = "type")]
    pub type_field: Option<String>,
    #[serde(rename = "site_admin")]
    pub site_admin: bool,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct License {
    pub key: Option<String>,
    pub name: Option<String>,
    #[serde(rename = "spdx_id")]
    pub spdx_id: Option<String>,
    pub url: Option<String>,
    #[serde(rename = "node_id")]
    pub node_id: Option<String>,
}

#[derive(Default, Debug, Clone, PartialEq, Serialize, Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct Permissions {
    pub admin: bool,
    pub maintain: bool,
    pub push: bool,
    pub triage: bool,
    pub pull: bool,
}
